w;; User behaviors
;; -----------------------------
;; Behaviors are stored as a set of diffs that are merged together
;; to create the final set of functionality that makes up Light Table. You can
;; modify these diffs to either add or subtract functionality.
;;
;; Behaviors are added to tags, objects with those tags then automatically gain
;; whatever logic the behavior imparts. To see a list of user-level behaviors,
;; start typing a word related to the functionality you want in between the square
;; brackets (e.g. "theme").

{:+ {
     ;; The app tag is kind of like global scope. You assign behaviors that affect
     ;; all of Light Table here
     :app [(:lt.objs.style/set-skin "light")
           (:lt.objs.app/run-on-init)
           ]

     ;; The editor tag is applied to all editors
     :editor [(:lt.objs.style/set-theme "solarized")
              (:lt.objs.editor/line-numbers)
              (:lt.plugins.auto-complete/auto-show-on-input)
              (:lt.objs.editor/tab-settings false 2 2)
              (:lt.objs.opener/save-on-focus-lost)
              (:lt.objs.editor.file/remove-trailing-whitespace)
              ]

     :editor.keys.hinting.active {"enter" [:passthrough]}

     :editor.css [:lt.plugins.lt-scrubber/activate-scrubber]
;;      :editor.less [(:lt.objs.editor.file/on-save LESS)]
;;      :editor.markdown [(:lt.objs.editor.file/on-save MARKDOWN)]
;;      :editor.coffeescript [(:lt.objs.editor.file/on-save COFFEESCRIPT)]

     :editor.python [(:lt.plugins.python/python-exe "/Library/Frameworks/Python.framework/Versions/3.3/bin/python3")
                     (:lt.plugins.python/ipython-exe "/Library/Frameworks/Python.framework/Versions/3.3/bin/ipython3")
                    ]
     }



 ;; You can use the subtract key to remove behavior that may get added by
 ;; another diff
 :- {

     :app [:lt.objs.intro/show-intro]

     }

}
