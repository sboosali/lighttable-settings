;; User keymap
;; -----------------------------
;; Keymaps are stored as a set of diffs that are merged together together
;; to create the final set of keys. You can modify these diffs to either add
;; or subtract bindings.
;;
;; Like behaviors, keys are bound by tag. When objects with those tags are active
;; the key bindings are live. Keys can be bound to any number of Light Table commands,
;; allowing you the flexibility to execute multiple operations together. To see a list
;; of all the commands you can execute, start typing a word related to the thing you
;; want to do in between the square brackets (e.g. type "editor").

{:+ {:app {"pmeta-o" [:claire-show]
           "ctrl-\\" [:claire-show]

           "pmeta-right" [:tabs.next]
           "pmeta-left" [:tabs.prev]

           "esc" [:show-commandbar-transient]
           }

     :editor {"alt-w"       [:editor.watch.watch-selection]
              "alt-shift-w" [:editor.watch.unwatch]

              "pmeta-f" [(:emacs.keymap-cmd "Alt-F")]
              "pmeta-b" [(:emacs.keymap-cmd "Alt-B")]
              "pmeta-d" [(:emacs.keymap-cmd "Alt-D")]
              "pmeta-backspace" [(:emacs.keymap-cmd "Alt-Backspace")]

              "ctrl-s" [:find.show]
              "ctrl-r" [:find.show]

              "pmeta-;" [:toggle-comment-selection]
              "pmeta-l" [(:emacs.keymap-cmd "Alt-L")]
              "pmeta-k" [(:emacs.keymap-cmd "Alt-K")]
              "pmeta-y" [(:emacs.keymap-cmd "Alt-Y")]

              "f1" [:eval-editor-form]
              "f12" [:eval-editor]
              }

     :editor.html       {"pmeta-s" [:save-all :refresh-connected-browser]}
     :editor.css        {"pmeta-s" [:save-all :refresh-connected-browser]}
     :editor.javascript {"pmeta-s" [:save-all :refresh-connected-browser]}

     :find-bar {"ctrl-s" [:find.next]
                "ctrl-r" [:find.prev]
                "ctrl-g" [:find.clear :find.hide]
                }

     }



 :- {:app {"ctrl-space" [:show-commandbar-transient]}
     :editor.keys.normal {"pmeta-f" [:find.show :find.fill-selection]}
     :claire {"esc" [:claire-clear :claire-show]}

     }
}
